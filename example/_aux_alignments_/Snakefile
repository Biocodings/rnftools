import smbl
include: smbl.include

reads = "se_reads.fq",
reference = "reference.fa"
ref=smbl.fasta.EXAMPLE


def bam(x):
	return x+".bam"

def bwa_index(prefix):
	return [
		prefix+".amb",
		prefix+".ann",
		prefix+".bwt",
		prefix+".pac",
		prefix+".sa"
	]

bwa_aln = "bwa_mem"


rule all:
	input:
		bam(bwa_aln)

rule clean:
	run:
		shell("rm "+bam(bwa_aln))

rule reads:
	input:
		"Snakefile.reads"
	output: [reference,reads]
	run:
		shell("snakemake -s {input[0]}")

rule bwa_index:
	input:
		smbl.prog.BWA,
		"{file}.fa"
	output:
		temp(bwa_index("{file}.fa"))
	shell:
		"{input[0]} index {input[1]}"

rule aln_bwa:
	input:
		reads,
		ref,
		bwa_index(ref)
	output:
		bam(bwa_aln)
	run:
		shell("bwa mem {input[1]} {input[0]} | samtools view -bS - > {output[0]}")

#rule bowtie_index:
#	input: []
#	output: []

#rule aln_bowtie2:
#	input:
#		reads,
#		ref,
#		bowtie_index(ref)
#	output:
#		bam(bowtie_aln)
#	run


