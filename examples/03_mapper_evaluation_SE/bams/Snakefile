import smbl
import rnftools


##

reference_basic_1   = smbl.fasta.EXAMPLE_1
reference_contam_1  = smbl.fasta.EXAMPLE_2

reference_basic_2   = smbl.fasta.EXAMPLE_2
reference_contam_2  = smbl.fasta.EXAMPLE_1

##

reads_1 = "reads_1.fq"
reads_2 = "reads_2.fq"

##

bwa_aln_1 = "bwa_mem_1.bam"
bwa_aln_2 = "bwa_mem_2.bam"

##

class BwaMapping:
	def __init__(self,fa,fq,bam):
		self._fa_fn=fa
		self._fq_fn=fq
		self._bam_fn=bam
		self._prefix=bam[:-4]

	def fq_fn(self):
		return self._fq_fn	

	def fa_fn(self):
		return self._fa_fn

	def bam_fn(self):
		return self._bam_fn

	def index_fn(self):
		return [
			self._prefix+".amb",
			self._prefix+".ann",
			self._prefix+".bwt",
			self._prefix+".pac",
			self._prefix+".sa"
		]

	def make_index(self):
		shell("{bwa} index {fa}".format(
				bwa=smbl.prog.BWA,
				fa=self._fa_fn,
			))

	def map_reads(self):
		shell("{bwa} mem {idx} {reads} | {samtools} view -bS - > {bam}".format(
				bwa=smbl.prog.BWA,
				samtools=smbl.prog.SAMTOOLS,
				idx=self._fa_fn,
				reads=self._fq_fn,
				bam=self._bam_fn,
			))

#
# READS
#

# sample 1

rnftools.mishmash.sample(reads_1[:-3],ends=1)

rnftools.mishmash.DwgSim(
	fa=reference_basic_1,
	read_length_1=100,
	read_length_2=0,
	number_of_reads=10000
)


rnftools.mishmash.DwgSim(
	fa=reference_contam_1,
	read_length_1=100,
	read_length_2=0,
	number_of_reads=2000
)


# sample 2

rnftools.mishmash.sample(reads_2[:-3],ends=1)

rnftools.mishmash.DwgSim(
	fa=reference_basic_1,
	read_length_1=100,
	read_length_2=0,
	number_of_reads=10000
)


rnftools.mishmash.DwgSim(
	fa=reference_contam_2,
	read_length_1=100,
	read_length_2=0,
	number_of_reads=2000
)


#
# ALIGNMENT
#

bwa1 = BwaMapping(
	fa=reference_basic_1,
	fq=reads_1,
	bam=bwa_aln_1,
)

bwa2 = BwaMapping(
	fa=reference_basic_2,
	fq=reads_2,
	bam=bwa_aln_2,
)

#
# RULES
#

# required final files

rule basic:
	input:
		#rnftools.input(),
		bwa1.bam_fn(),
		bwa2.bam_fn(),

include: rnftools.include()


#
# BAM FILES
#

rule bwa_index_1:
	input:
		smbl.prog.BWA,
		smbl.prog.SAMTOOLS,
		bwa1.fa_fn(),
	output:
		bwa1.index_fn()
	shell:
		bwa1.make_index()

rule bwa_index_2:
	input:
		smbl.prog.BWA,
		smbl.prog.SAMTOOLS,
		bwa2.fa_fn()
	output:
		bwa2.index_fn()
	shell:
		bwa2.make_index()

rule aln_bwa_1:
	input:
		smbl.prog.BWA,
		bwa1.fa_fn(),
		bwa1.fq_fn()
	output:
		bwa1.bam_fn()
	run:
		bwa1.map_reads()

rule aln_bwa_2:
	input:
		smbl.prog.BWA,
		bwa2.fa_fn(),
		bwa2.fq_fn(),
	output:
		bwa2.bam_fn()
	run:
		bwa2.map_reads()

#rule bowtie_index:
#	input: []
#	output: []

#rule aln_bowtie2:
#	input:
#		reads,
#		ref,
#		bowtie_index(ref)
#	output:
#		bam(bowtie_aln)
#	run
